# vim: filetype=sh

alias kupo="cd $KUPO_HOME"
alias dots="cd $DOTTIE_HOME"

# Convenient stuff
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."

alias l="ls -Gal"
alias ls="ls -G"
alias ll="ls -Gal"
alias empties="find . -empty -type d -maxdepth 2"

tableflip() {
  echo "（╯°□°）╯ ┻━┻";
}
alias flip="tableflip"

shrug() {
  echo "¯\_(ツ)_/¯";
}

ght() {
  cat ~/Development/.github | pbcopy
}

alias pg="ps ax | grep -v grep | grep -i "
alias ip="ifconfig | grep 'inet '"

function profile {
  $EDITOR ~/.bash_profile && source ~/.bash_profile
}

function aliases {
  # $EDITOR ~/.aliases && source ~/.aliases
  $EDITOR $DOTTIE_HOME/bash/aliases && source ~/.bash_profile
}

alias renew='source ~/.bash_profile'

alias ducks='du -cksh * | sort -rn|head -11' # Lists folders and files sizes in the current folder
alias f='find . -iname'
alias gr='grep -r' # Recursive grep

# Shows most used commands, from: http://lifehacker.com/software/how-to/turbocharge-your-terminal-274317.php
alias profileme="history | awk '{print \$4}' | awk 'BEGIN{FS=\"|\"}{print \$1}' | sort | uniq -c | sort -n | tail -n 20 | sort -nr"

# Git
alias ch="git diff --ignore-space-at-eol | $EDITOR"
alias chc="git diff --cached --ignore-space-at-eol | $EDITOR"
alias current_branch="git symbolic-ref HEAD | cut -d / -f 3"
alias gaa="git add --all && git status"
alias gadd="git add --all && git status"
alias gap="git add --patch"
alias gb='git branch -v'
alias gbr="git for-each-ref --count=30 --sort=-committerdate refs/heads/ --format='%(refname)' | cut -d / -f 3-"
alias gca='git commit -v --all'
alias gcam='git commit --amend'
alias gcb='git checkout -b'
alias gcf="git checkout -f"
alias gch="git log ORIG_HEAD.. --stat --no-merges"
alias gci='git commit -v'
alias gcia='git commit -v --all'
alias gclean="git clean -dff && git submodule foreach git clean -dff"
alias gcp="git checkout --patch"
alias gcv='git commit -v'
alias gd='git diff'
alias gdc='git diff --cached | $EDITOR'
alias gdh='git diff HEAD | $EDITOR'
alias gdm='git diff origin/master | $EDITOR'
alias gfd='git push -f origin head:canary'
alias git-user="$EDITOR ~/.gitconfig"
alias gl="git log --date=local"
alias gls="git shortlog -sn"
alias glop="git log --pretty=format:'%C(yellow)%ad %Creset| %Cgreen%h %Creset| %Cblue%<(10,trunc)%an %Creset| %Cgreen%d %Creset%s' --date=short"
alias gmm="git merge master"
alias gps="git pull && git submodule sync && git submodule update --init --recursive"
alias grc="git rebase --continue"
alias grim="git rebase --interactive master"
alias grm="git status | grep 'deleted:' | sed -e 's/^.*deleted: *//' -e 's/^/\"/g' -e 's/$/\"/g' | xargs -n1 git rm"
alias gs='git status'
alias gss='git status --short --branch'
alias gu="$EDITOR ~/.gitconfig"
alias gum="echo 'Resetting master to the latest origin/master...' && git fetch && git update-ref refs/heads/master origin/master"
alias gip="git commit -m 'WIP'"
alias ungreen="git log --abbrev-commit --reverse --pretty=format:'%C(yellow)%h%Creset %C(bold)%s%Creset %an' origin/ci-master-distributed-latest..origin/master"

# Xcode
alias dxdd='echo "Deleting `cd ~/Library/Developer/Xcode; pwd`/DerivedData"; rm -rf ~/Library/Developer/Xcode/DerivedData'

# Ruby
function be {
  bundle check || bundle install
  bundle exec $@
}

alias beer="be rake"
alias bees="be rspec"

alias http="ruby -run -e httpd . -p 8080"

# Weather
function weather {
  curl wttr.in/$1?1
}
# alias weather2="curl -4 wttr.in/sanfrancisco"
# alias moon="

# Unixporn

function blacktitle {
  echo -ne "\033]6;1;bg;red;brightness;0\a"
  echo -ne "\033]6;1;bg;green;brightness;40\a"
  echo -ne "\033]6;1;bg;blue;brightness;51\a"
}

function whitetitle {
  echo -ne "\033]6;1;bg;red;brightness;253\a"
  echo -ne "\033]6;1;bg;green;brightness;246\a"
  echo -ne "\033]6;1;bg;blue;brightness;227\a"
}

function purptitle {
  echo -ne "\033]6;1;bg;red;brightness;62\a"
  echo -ne "\033]6;1;bg;green;brightness;41\a"
  echo -ne "\033]6;1;bg;blue;brightness;60\a"
}

# Bash Tips
# https://github.com/jlevy/the-art-of-command-line
function cheat {
  curl cheat.sh/$1
}

function explain {
  open "https://explainshell.com/"
}

#################################################
#                 Postgres                      #
#################################################
alias pgtail="tail -f /usr/local/var/postgres/server.log"
alias pgconf="vim /usr/local/var/postgres/postgresql.conf"

#################################################
#                    Redis                      #
#################################################
alias redtail="redis-cli monitor"

#################################################
#                HTTP Performance               #
#################################################
alias perf='curl -o /dev/null  -s -w "%{time_connect} + %{time_starttransfer} = %{time_total}\n"'
alias sniff='curl -w "@$DOTTIE_HOME/bash/sniff.txt" -o /dev/null -s'
alias loaf='wrk -t8 -c100 -d30S --timeout 2000'

#################################################
#                  Homebrew                     #
#################################################
alias bi="brew info"
alias bs="brew search"
alias brm="brew rm"
alias bsl="brew services list"
alias bss="brew services start"
alias bsn="brew services stop"
alias bsr="brew services restart"

#################################################
#           Coursera ML Class                   #
#################################################
alias octave="/usr/local/octave/3.8.0/bin/octave-3.8.0"

#################################################
#                [] Square                      #
#################################################
alias rtd="git fetch && git log --abbrev-commit --no-merges --reverse --pretty=format:'%C(yellow)%h%Creset %C(bold)%s%C(green) %an' origin/hoist/sjc1b/production..origin/deployable"
alias sjcrtd=rtd

#################################################
#                DD DoorDash                    #
#################################################
alias dd="cd $DOORDASH_HOME" # careful, this overrides an actual bash command, dd
alias dthrift="cd $DOORDASH_HOME/doordash-thrift"

# Django
alias abv="source venv/bin/activate" # activate python virtual env
alias dj="cd $DOORDASH_HOME/doorstep-django"
alias djgo="brew services restart redis && brew services restart rabbitmq && brew services restart elasticsearch17 && brew services restart postgres"
alias dies="run index-stores -m1 && run update-store-statuses -m1" # index elastic search on stores in market 1
alias rad="radon cc -i "tests" -s" # skip tests with randon, --min for min score

# Deep Red
alias dr="cd $DOORDASH_HOME/deep-red"

# iOS
alias dapple="cd $DOORDASH_HOME/doordash-consumer-ios"

alias cv="convox"

#################################################
#                   Raheem                      #
#################################################

alias rai="cd $GITHUB_HOME/../raheem-ai/dashboard-rails"

#################################################
#                Udacity Drive                  #
#################################################

function drive {
  cd $GITHUB_HOME/../udacity
  source activate carnd-term1
  tmux split-window -h
  cd $KUPO_HOME/projects/MOOCs/udacity/drive
  source activate carnd-term1
  tmux rename-window drive
}

#################################################
#                   Coinbase                    #
#################################################
function cb {
  if [ "$1" = "" ]
  then
    # echo "cb"
    cd ~/Development/cbhq
  elif [ "$1" = "wal" ]
  then
    # echo "wallace"
    cd ~/Development/cbhq/wallace
  elif [ "$1" = "eth" ]
  then
    # echo "macbeth"
    cd ~/Development/cbhq/macbeth
  else
    echo "Not defined yet"
  fi
}
alias dc="docker-compose"

#################################################
#                    Airbnb                     #
#################################################
function air {
  if [ "$1" = "" ]
  then
    # echo "airlab"
    cd ~/airlab/repos
  elif [ "$1" = "repipe" ]
  then
    # echo "repipe"
    cd ~/airlab/repos/repipe
  elif [ "$1" = "tree" ]
  then
    # echo "treehouse"
    cd ~/airlab/repos/treehouse
  elif [ "$1" = "repos" ]
  then
    # echo "repos"
    cd ~/airlab/repos
  elif [ "$1" = "meta" ]
  then
    # echo "metastation"
    cd ~/airlab/repos/treehouse/projects/chinainfra/metastation
  elif [ "$1" = "jlint" ]
  then
    ./gradlew spotlessApply
  elif [ "$1" = "tsa" ]
  then
    air jlint
  elif [ "$1" = "idl" ]
  then
    ./gradlew buildServiceIDL
  elif [ "$1" = "jc" ]
  then
    ./gradlew compileJava
  elif [ "$1" = "sparse" ]
  then
    find $2 -iname "build.gradle" | rb -l 'slice(2, length - 14)' | sort
  elif [ "$1" = "logs" ]
  then
    ENV=staging k logs
  elif [ "$1" = "tail" ]
  then
    ENV=staging k tail
  else
    echo "Not defined yet"
  fi
}

alias alacritty="vim /Users/sean_yu/.config/alacritty/alacritty.yml"

alias kc="kubectl"

# WTF?
alias exportty="export GPG_TTY=$(tty)"

# Prune docker images
alias dp="docker system prune -a -f"

function port() {
  # NOTE(yu): This searches for the port directly
  # `+c 0` means full command name is displayed
  lsof +c 0 -i :$1

  # NOTE(yu): this does a search match search
  # lsof +c 0 -i 6 | rb "each_with_index.select { |r, i| i == 0 || r.include?('$1') }.map { |r, i| r }"
}

gwr () {
        $(git rev-parse --show-toplevel)/gradlew $@
}

